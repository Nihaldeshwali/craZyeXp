
  1. Author Func specifications
  ====================================
  1.1 Brief Description

  1.2 REST End point API specifications
     i) Creating a new Author
         HTTP: POST /api/Author/
         DATA: name=name,reg=reg,history=history,tag1=tag1,tag2=tag2,

    ii) Update a exiting Author info
         HTTP: POST /api/Author/1/
         DATA: name=name,reg=reg,history=history,tag1=tag1,tag2=tag2,

   iii) Getting an Author info
         HTTP: GET /api/Author/1/

    iv) Getting All Author info
         HTTP: GET /api/Author/
         DATA: name=name,reg=reg,history=history,tag1=tag1,tag2=tag2,

     v) search  All Author info
         HTTP: GET /api/Author/
         DATA: name=name,reg=reg,history=history,tag1=tag1,tag2=tag2,

    vi) Search using pagination of Author data
         HTTP: GET /api/Author/
         DATA: name=name,reg=reg,history=history,tag1=tag1,tag2=tag2,

  

    x) Append a tags on a list 
         HTTP: POST : http://192.168.56.101:7777/api/Author/3/list/
         DATA : name=dipankar12322333&reg=1&tag1=%5B3%2C4%5D&action=APPEND

   xi) Remove a tags on a list 
         HTTP: POST : http://192.168.56.101:7777/api/Author/3/list/
         DATA : name=dipankar12322333&reg=1&tag1=%5B3%2C4%5D&action=REMOVE

   xii) Serach a tags on a list 
         HTTP: POST : http://192.168.56.101:7777/api/Author/3/list/
         DATA : name=dipankar12322333&reg=1&tag1=%5B3%2C4%5D&action=SEARCH



    x) Advance Search Example 
         HTTP: POST : http://192.168.56.101:7777/api/Author/aq/
         DATA : name=dipankar12322333&reg=1&tag1=%5B3%2C4%5D&action=APPEND
         orderBy=reg%2Cname&include=name%2Creg&name=%3Astartswith%3Aa
      1) Filter Data by startswith, endswith , exact, iexact etc.
          DATA format => and:startswith:abc OR <or:endswith:abc> like this
      2) Performing oder by
         example  Data => oredrBy=name,reg 
      3) Only includes some colus
      example data=> include=name,reg




  2. Publication Func specifications
  ====================================
  2.1 Brief Description

  2.2 REST End point API specifications
     i) Creating a new Publication
         HTTP: POST /api/Publication/
         DATA: name=name,accid=accid,

    ii) Update a exiting Publication info
         HTTP: POST /api/Publication/1/
         DATA: name=name,accid=accid,

   iii) Getting an Publication info
         HTTP: GET /api/Publication/1/

    iv) Getting All Publication info
         HTTP: GET /api/Publication/
         DATA: name=name,accid=accid,

     v) search  All Publication info
         HTTP: GET /api/Publication/
         DATA: name=name,accid=accid,

    vi) Search using pagination of Publication data
         HTTP: GET /api/Publication/
         DATA: name=name,accid=accid,

  

  3. Book Func specifications
  ====================================
  3.1 Brief Description

  3.2 REST End point API specifications
     i) Creating a new Book
         HTTP: POST /api/Book/
         DATA: name=name,author=author,

    ii) Update a exiting Book info
         HTTP: POST /api/Book/1/
         DATA: name=name,author=author,

   iii) Getting an Book info
         HTTP: GET /api/Book/1/

    iv) Getting All Book info
         HTTP: GET /api/Book/
         DATA: name=name,author=author,

     v) search  All Book info
         HTTP: GET /api/Book/
         DATA: name=name,author=author,

    vi) Search using pagination of Book data
         HTTP: GET /api/Book/
         DATA: name=name,author=author,

  

    vii) Getting all Author for a Book
         HTTP: GET /api/Book/1/Author/

   viii) Adding more Author for a Book
         HTTP: POST /api/Book/1/Author/
         DATA: action=ADD&author_list=[1,2,3]

     ix) Removing more Author for a Book
         HTTP: POST /api/Book/1/Author/
         DATA: action=DEL&author_list=[1,2,3]


