/*
  Name: Stack and Queue Program( Book Covered )
  Copyright: Interview Bible
  Author: 
  Date: 07/03/14 22:58
  Description:  All Stack and Queue program in place
  
  Table of Contents:
      1. Convert Arry to list
      2.
      3.
      
*/


#include<stdio.h>
#include<conio.h>

/*******************************************************************************
* Problem 1:  Impelment a Stack Class
* Input / Output:
* Algorithms:
*******************************************************************************/


/*******************************************************************************
* Problem 2: Implement a Queue Class 
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem 3: Reverse a Stack In-Place 
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Reverse a Stack Out-of place
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Find Minimum elemnt of a Stack in O(1)
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Sort a Stack Inplece With Recustion
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Insert an Element in botton of stack using std. operations
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Implment a Stack uisng Queue
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Implemnet a Queue using Stack
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Implment a 2 Stack in a Array
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Implemnt 3 Stacks in a Array.
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Implement N stack in a Array
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Using  n -stack and m number given <1,2,3..M>. How many permutation can be generated ?
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Implement thread safe version of stack ?
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Traversal a Tree using a Queue.
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Reverse a Queue using another Queue
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Split a Queue into two queue based on even and odd.
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Implement a DeQueue using two Stack ?
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Implemnet a Prority Queue using Matrix PQ[] and uisng two arry ?
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Implement a Qute eto get max in O(1)?
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Solve TOH using stack only.
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Mimic real life multi stack problem.
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Evalute prefix to postfix uisng Stack
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Convert Infix to postfix expression using Stack
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : How to implement Stack using Heap ? 
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : How to implement Queue using Heap?
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : How to use stack for Symbol balanace checking
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Infix evalusion in One pass
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Let's push 1,2,3,4,5,6,7 in the stack in order, find out how many way to do Push /pop operation to get a combinaation like,3,2,5,6,4,1.
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Doubling Array implemnationof stack, size increase in recusive way.
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Find Largest rectrangle histogram on common base line.
* Input / Output:
* Algorithms:
*******************************************************************************/

/*******************************************************************************
* Problem : Given a Sequence of Push and POP operation. Check the sequenec is valid or not !
* Input / Output:
* Algorithms:
*******************************************************************************/


/*******************************************************************************
* Problem : 
* Input / Output:
* Algorithms:
*******************************************************************************/






int main()
{
    printf("**************** Problem of Array **************\n\n");
    
    
    
    printf("****************** [ E N D ] *******************\n\n");
    getch();
}    

